version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: always
    volumes:
      - .:/var/www
    networks:
      - laravel
    depends_on:
      redis:
        condition: service_started
      mysql:
        condition: service_started
    env_file:
      - .env

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_queue
    restart: always
    working_dir: /var/www
    command: php artisan queue:work
    volumes:
      - .:/var/www
    networks:
      - laravel
    depends_on:
      redis:
        condition: service_started
      mysql:
        condition: service_started

  nginx:
    image: nginx:alpine
    container_name: laravel_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel
    depends_on:
      app:
        condition: service_started

  redis:
    image: redis:alpine
    container_name: laravel_redis
    restart: always
    networks:
      - laravel

  echo:
    image: node:18-alpine
    container_name: laravel_echo
    working_dir: /var/www
    restart: always
    volumes:
      - .:/var/www
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    command: ["/usr/local/bin/wait-for-it.sh", "laravel_redis:6379", "--", "npx", "laravel-echo-server", "start"]
    ports:
      - "6001:6001"
    networks:
      - laravel
    depends_on:
      redis:
        condition: service_started

  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: always
    ports:
      - "3306:3306"
    env_file:
      - .env
    volumes:
      - ./docker/mysql:/var/lib/mysql
    networks:
      - laravel

networks:
  laravel:
    driver: bridge