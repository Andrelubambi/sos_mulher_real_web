services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app 
    restart: always
    working_dir: /var/www
    volumes:
      - .:/var/www
    networks:
      - laravel
    depends_on:
      redis:
        condition: service_started
      mysql:
        condition: service_started
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=laravel_mysql
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=laravel
    env_file:
      - .env

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_queue
    restart: always
    working_dir: /var/www
    command: php artisan queue:work
    volumes:
      - .:/var/www
    networks:
      - laravel
    depends_on:
      redis:
        condition: service_started
      mysql:
        condition: service_started
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=laravel_mysql
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=laravel
    env_file:
      - .env

  nginx:
    image: nginx:alpine
    container_name: laravel_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel
      - jitsi
    depends_on:
      app:
        condition: service_started

  redis:
    image: redis:alpine
    container_name: laravel_redis
    restart: always
    networks:
      - laravel

  echo:
    image: node:18-alpine
    container_name: laravel_echo
    working_dir: /var/www
    restart: always
    volumes:
      - .:/var/www
    command: ["/bin/sh", "-c", "apk add --no-cache netcat-openbsd && while ! nc -z laravel_redis 6379; do echo 'Waiting for Redis...'; sleep 2; done && echo 'Redis is ready!' && npx laravel-echo-server start"]
    ports:
      - "6001:6001"
    networks:
      - laravel
    depends_on:
      redis:
        condition: service_started
    env_file:
      - .env

  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=sua_senha_secreta
      - MYSQL_DATABASE=laravel
      - MYSQL_USER=laravel
      - MYSQL_PASSWORD=laravel
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel

# ----------------- NOVO - SERVIÃ‡OS JITSI MEET -----------------
  web:
    image: jitsi/web:stable-6421
    restart: always
    networks:
      jitsi:
        aliases:
          - jitsi.sosmulherreal.com
    volumes:
      - ./jitsi/web/config:/config:Z
    environment:
      - JITSI_DOMAIN=jitsi.sosmulherreal.com
      - ENABLE_HTTPS=1
      - DOCKER_HOST_ADDRESS=72.60.184.186
      - JVB_HOSTNAME=jitsi.sosmulherreal.com
      - JICOFO_HOSTNAME=jitsi.sosmulherreal.com
    depends_on:
      - jvb

  jvb:
    image: jitsi/jitsi-videobridge2:stable-6421
    restart: always
    networks:
      jitsi:
        aliases:
          - jitsi.sosmulherreal.com
    ports:
      - "10000:10000/udp"
      - "4443:4443"
    volumes:
      - ./jitsi/jvb/config:/config:Z
    environment:
      - JVB_ADVERTISE_IPS=72.60.184.186
      - JVB_HOSTNAME=jitsi.sosmulherreal.com
      - JICOFO_HOSTNAME=jitsi.sosmulherreal.com
      - JITSI_DOMAIN=jitsi.sosmulherreal.com

  prosody:
    image: jitsi/prosody:stable-6421
    restart: always
    networks:
      jitsi:
        aliases:
          - jitsi.sosmulherreal.com
    volumes:
      - ./jitsi/prosody/config:/config:Z
    environment:
      - JITSI_DOMAIN=jitsi.sosmulherreal.com
    depends_on:
      - jicofo

  jicofo:
    image: jitsi/jicofo:stable-6421
    restart: always
    networks:
      jitsi:
        aliases:
          - jitsi.sosmulherreal.com
    volumes:
      - ./jitsi/jicofo/config:/config:Z
    environment:
      - JITSI_DOMAIN=jitsi.sosmulherreal.com
    depends_on:
      - prosody

networks:
  laravel:
    driver: bridge
  jitsi:
    driver: bridge

volumes:
  mysql_data:
    driver: local