map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# HTTP → HTTPS (Laravel)
server {
    listen 80;
    server_name sosmulherreal.com www.sosmulherreal.com;
    location ^~ /.well-known/acme-challenge/ {
        default_type text/plain;
        root /var/www/certbot;
        try_files $uri =404;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTP → HTTPS (Jitsi)
server {
    listen 80;
    server_name jitsi.sosmulherreal.com;
    location ^~ /.well-known/acme-challenge/ {
        default_type text/plain;
        root /var/www/certbot;
        try_files $uri =404;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS - Laravel (Domínio Principal)
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name sosmulherreal.com www.sosmulherreal.com;
    root /var/www/public;
    index index.php index.html index.htm;

    # Certificados SSL
    ssl_certificate /etc/letsencrypt/live/sosmulherreal.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sosmulherreal.com/privkey.pem;

    # Configurações SSL modernas
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";

    # Laravel routes
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP processing 
    location ~ \.php$ {
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # WebSocket para Laravel Echo - CONFIGURAÇÃO CORRIGIDA
    location /socket.io/ {
        proxy_pass http://socketio_server:6001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_cache off;
        proxy_redirect off;
        
        # Timeouts corrigidos (7d é excessivo, use valores mais realistas)
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 86400s; # 1 dia é suficiente para WebSockets
        
        # Importante para CORS e WebSocket
        add_header X-Forwarded-Host $host;
    }

    # Static files
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# HTTPS - Jitsi Meet
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name jitsi.sosmulherreal.com;

    # Certificados SSL
    ssl_certificate /etc/letsencrypt/live/jitsi.sosmulherreal.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/jitsi.sosmulherreal.com/privkey.pem;

    # Configurações SSL modernas
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000" always;

    # Proxy para Jitsi Web
    location / {
        proxy_pass http://web:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}