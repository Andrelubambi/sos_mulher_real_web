services:
  app:
    build: .
    container_name: laravel_app
    volumes:
      - .:/var/www
    networks:
      - laravel
    depends_on:
      - mysql
      - redis
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: laravel_nginx
    ports:
      - "80:80"
    volumes:
      - .:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel
    depends_on:
      - app
    restart: unless-stopped

  mysql:
    image: mysql:8
    container_name: laravel_mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: root123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: laravel_redis
    ports:
      - "6379:6379"
    networks:
      - laravel
    restart: unless-stopped

  queue:
    build: .
    container_name: laravel_queue
    command: php artisan queue:work --timeout=60
    volumes:
      - .:/var/www
    networks:
      - laravel
    depends_on:
      - app
      - redis
    restart: unless-stopped

  npm:
    image: node:18
    container_name: laravel_npm
    working_dir: /var/www
    volumes:
      - .:/var/www
    command: ["npm", "run", "dev"]
    networks:
      - laravel
    depends_on:
      - app
    restart: unless-stopped

  echo:
    image: node:18
    container_name: laravel_echo
    working_dir: /var/www
    volumes:
      - .:/var/www
    command: ["npx", "laravel-echo-server", "start"]
    ports:
      - "6001:6001"
    networks:
      - laravel
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  laravel:
    driver: bridge
