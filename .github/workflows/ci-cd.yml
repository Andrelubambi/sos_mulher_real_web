name: Laravel CI/CD

on:
  push:
    branches:
      - main
      - dev
      - staging
  pull_request:
    branches:
      - main
      - staging

env:
  DOCKER_IMAGE: lubambi01/sos_mulher_real_web

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  build-test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, bcmath, pdo_mysql
          ini-values: post_max_size=256M, upload_max_filesize=256M

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install PHP dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Install NPM dependencies
        run: npm ci

      - name: Run backend Unit tests
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_ENV: ${{ github.ref_name }}
          APP_URL: ${{ secrets.APP_URL }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: php artisan test --testsuite=Unit || echo "⚠️ Unit tests failed, but continuing CI"

      - name: Build frontend assets (production only)
        if: github.ref_name == 'main'
        run: npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v3

      - name: Docker login
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${DOCKER_IMAGE}:${GITHUB_REF_NAME} .

      - name: Push Docker image
        run: |
          docker push ${DOCKER_IMAGE}:${GITHUB_REF_NAME}

  deploy:
  runs-on: ubuntu-latest
  needs: docker-build
  if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/staging'
  steps:
    - name: SSH Deploy
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          set -e
          cd /var/www/myapp
          
          # Definir variáveis no servidor
          DOCKER_IMAGE="${{ env.DOCKER_IMAGE }}"
          BRANCH_NAME="${{ github.ref_name }}"
          
          echo "🔄 Iniciando deploy para branch: $BRANCH_NAME"
          
          # Backup
          docker compose down || true
          BACKUP_TAG=laravel_app_backup_$(date +%Y%m%d%H%M%S)
          docker tag laravel_app $BACKUP_TAG 2>/dev/null || echo "⚠️ Container atual não encontrado para backup"
          
          # Pull da nova imagem
          echo "📦 Baixando imagem Docker..."
          docker pull ${DOCKER_IMAGE}:${BRANCH_NAME}
          
          # Deploy
          echo "🚀 Iniciando deploy..."
          docker compose up -d
          
          echo "✅ Deploy concluído com sucesso!"