name: Laravel CI/CD

on:
  push:
    branches:
      - main
      - dev
      - staging
  pull_request:
    branches:
      - main
      - staging

env:
  DOCKER_IMAGE: mydockerhubuser/myapp

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  build-test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, bcmath, pdo_mysql
          ini-values: post_max_size=256M, upload_max_filesize=256M

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install PHP dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Install NPM dependencies
        run: npm ci

      - name: Run backend tests
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_ENV: ${{ github.ref_name }}  # opcional, para diferenciar dev/staging/main
          APP_URL: ${{ secrets.APP_URL }}  # se voc√™ tiver
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: php artisan test


      - name: Run frontend build
        run: |
          if [ "${GITHUB_REF_NAME}" = "main" ]; then
            npm run build
          else
            npm run dev -- --watch
          fi

  docker-build:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v3

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image with cache
        run: |
          docker build --cache-from ${DOCKER_IMAGE}:${GITHUB_REF_NAME} -t ${DOCKER_IMAGE}:${GITHUB_REF_NAME} .

      - name: Push Docker image
        run: |
          docker push ${DOCKER_IMAGE}:${GITHUB_REF_NAME}

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/staging'
    steps:
      - name: SSH Deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            cd /var/www/myapp
            # Backup do container atual para rollback
            docker compose -f docker-compose.yml -f docker-compose.${GITHUB_REF_NAME}.yml down || true
            docker tag laravel_app laravel_app_backup_$(date +%Y%m%d%H%M)
            # Deploy
            docker compose -f docker-compose.yml -f docker-compose.${GITHUB_REF_NAME}.yml up -d --build || { 
              echo "‚ùå Deploy falhou, revertendo..."; 
              docker tag laravel_app_backup laravel_app; 
              docker compose up -d; 
              exit 1; 
            }

      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL }}
          slack-token: ${{ secrets.SLACK_TOKEN }}
          text: "üöÄ Deploy conclu√≠do: Branch ${{ github.ref_name }}"

